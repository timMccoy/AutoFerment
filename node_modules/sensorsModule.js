var sensorExterior = {};
sensorExterior.state = true;
sensorExterior.tempData = [];
sensorExterior.tempDates = [];
sensorExterior.maxArraySize = 1000;

var sensorInterior = {};
sensorInterior.state = true;
sensorInterior.tempData = [];
sensorInterior.tempDates = [];
sensorInterior.maxArraySize = 1000;

var controlVessel = {}
controlVessel.state = false;
controlVessel.ssr_warm = false;
controlVessel.ssr_cool = false;

var contorlTemp = 72;

var fakeRead = 100;
var direction = "down";

function readTemp(sensor)
{
	switch (sensor)
	{	
		case ("exterior"):
		{
			return 100;
		}
		case ("interior"):
		{
			if(direction=="up")
			{
				fakeRead = fakeRead+1;
			}
			else if(direction=="down")
			{
				fakeRead = fakeRead-1;
			}

			if(fakeRead < 50)
			{
				direction="up";
			}

			if(fakeRead > 100)
			{
				direction="down";
			}

			return fakeRead;
		}
		default:
				break;
	}
}

//export functions called by the server
module.exports = {
	getSensorsState: function() 
	{
		var sensorsState = {};
		sensorsState.sensorExteriorState = sensorExterior.state;
		sensorsState.sensorInteriorState = sensorInterior.state;

		return sensorsState;
	},
	setSensorState: function(newState) 
	{
		switch (newState.sensor)
		{	
			case (1):
			{
				sensorExterior.state = newState.state;
				break;
			}
			case (2):
			{
				sensorInterior.state = newState.state;
				break;
			}
			default:
				break;
		}
		return newState;
	},
	setPowerState: function(newState) 
	{
		//console.log(newState);
		switch (newState)
		{	
			case ("on"):
			{
				controlVessel.state = true;
				break;
			}
			case ("off"):
			{
				controlVessel.state = false;
				break;
			}
			default:
				break;
		}
		return newState;
	},
	setControlTemp: function(newContorlTemp) 
	{
		contorlTemp = newContorlTemp;
	},
	heartBeat: function() 
	{
		if(sensorExterior.state)
		{
			if(sensorExterior.tempData.length == sensorExterior.maxArraySize)
			{
				sensorExterior.tempData.shift();
				sensorExterior.tempDates.shift();		
			}
			//read
			sensorExterior.tempData.push(readTemp("exterior"));
			sensorExterior.tempDates.push(new Date());
		}
		if(sensorInterior.state)
		{
			if(sensorInterior.tempData.length == sensorInterior.maxArraySize)
			{
				sensorInterior.tempData.shift();
				sensorInterior.tempDates.shift();
			}
			sensorInterior.tempData.push(readTemp("interior"));
			sensorInterior.tempDates.push(new Date());
		}
		//control
		//console.log("control is " + controlVessel.state);
		if(controlVessel.state)
		{

			if(sensorExterior.tempData[sensorExterior.tempData.length-1] > contorlTemp)
			{
				//"Summer Weather" 
				//console.log("summer weather");
				if(sensorInterior.tempData[sensorInterior.tempData.length-1] > contorlTemp)
				{
					//turn ON ssr_cool;
					controlVessel.ssr_cool = true;
					controlVessel.ssr_warm = false;
					//console.log("ssr cool ON");
				}
				else
				{
					//turn OFF ssr_cool;
					controlVessel.ssr_cool = false;
					controlVessel.ssr_warm = false;
					//console.log("ssr cool OFF");
				}
			}
			else if(sensorExterior.tempData[sensorExterior.tempData.length-1] < contorlTemp)
			{
				//"Winter Weather" 
				//console.log("Winter weather");
				if(sensorInterior.tempData[sensorInterior.tempData.length-1] < contorlTemp)
				{
					//turn ON ssr_warm;
					controlVessel.ssr_warm = true;
					controlVessel.ssr_cool = false;
					//console.log("ssr warm ON");
				}
				else
				{
					//turn OFF ssr_warm;
					controlVessel.ssr_warm = false;
					controlVessel.ssr_cool = false;
					//console.log("ssr warm OFF");
				}
			}
		}
		else
		{
			controlVessel.ssr_warm = false;
			controlVessel.ssr_cool = false;
		}
	},
	getData: function() 
	{
		var data = {};
		data.sensorExterior = sensorExterior;
		data.sensorInterior = sensorInterior;
		data.controlVessel = controlVessel;
		data.contorlTemp = contorlTemp;
		return data;
	}
};
