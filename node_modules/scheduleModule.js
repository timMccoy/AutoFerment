var step = function(stageNum, stepNum, days, hours, minutes, temp) 
{
	this.id = {};
	this.id.stage = stageNum;
	this.id.step = stepNum;
	this.duration = {};
	this.duration.days = days;
	this.duration.hours = hours;
	this.duration.minutes = minutes;
	this.temp = temp;
}

var test1 = {};
test1.id = "test1";
test1.stages = 2;
test1.sched = [];
test1.sched.push(new step(1, 1, 0, 8, 5, 65));
test1.sched.push(new step(1, 2, 0, 8, 5, 66));
test1.sched.push(new step(2, 1, 0, 8, 5, 67));
test1.sched.push(new step(2, 2, 0, 8, 5, 68));

var test2 = {};
test2.id = "test2";
test2.stages = 2;
test2.sched = [];
test2.sched.push(new step(1, 1, 0, 8, 5, 75));
test2.sched.push(new step(1, 2, 0, 8, 5, 76));
test2.sched.push(new step(2, 1, 0, 8, 5, 77));
test2.sched.push(new step(2, 2, 0, 8, 5, 78));

var test3 = {};
test3.id = "test3";
test3.stages = 2;
test3.sched = [];
test3.sched.push(new step(1, 1, 0, 8, 5, 85));
test3.sched.push(new step(1, 2, 0, 8, 5, 86));
test3.sched.push(new step(2, 1, 0, 8, 5, 87));
test3.sched.push(new step(2, 2, 0, 8, 5, 88));

var newSched = {};
newSched.id = "new";
newSched.stages = 1;
newSched.sched = [];
newSched.sched.push(new step(1, 1, 0, 0, 0, 0));

var savedScheduleList = [];
savedScheduleList.push(test1, test2, test3, newSched);

//export functions called by the server
module.exports = {
	getSavedSchedules: function() 
	{
		var scheduleList = {};
		scheduleList.list = [];
		for(var i = 0; i < savedScheduleList.length; i++)
		{
			scheduleList.list[i] = savedScheduleList[i].id;
		}
		//console.log(scheduleList.list);
		return scheduleList;
	},
	getSchedule: function(id)
	{
		var schedule = {};
		for(var i = 0; i < savedScheduleList.length; i++)
		{
			if(savedScheduleList[i].id == id)
			{
				schedule = savedScheduleList[i];
				break;
			}
		}
		return schedule;
	}
};

