//Sensor Controller Object
var pin = 22
var tempReading = 72;
var to;

var state_ = {
	FRIDGE_ON : 6,
	FRIDGE_OFF : 7
};

function SensorController(id, address, simulation) 
{
	this.sensorId = id;
	this.SIMULATION = simulation;
	this.currentTemp = 0.0;
	/* var isLoaded = loadSensorDriver();

	if(isLoaded)
	{
		this.sensorId = getSensorId();
	}

	

	this.Gpio = {};
	this.led = {}; */
}

SensorController.prototype.tester = function() 
{
	//console.log("SensorController Test!!");
};

SensorController.prototype.readTemp = function( state ) 
{

	var t = this;
	if(this.SIMULATION)
	{
		//this.led.writeSync(1);

		if(state == state_.FRIDGE_ON)
		{
			tempReading--;
			
		}
		else
		{
			tempReading++;
		}

		/*var tempReading = 100.0;
		sensor.get(this.sensorId, function(err, temp){
				//console.log(temp);
				t.setTemp(temp);
				
			});

		to = setTimeout(function(){ t.sleep(); }, 500);	
		
		return this.currentTemp;
		*/
		return tempReading
	}
};

SensorController.prototype.setTemp = function(temp) 
{

	var tempF = 0.0;
	//console.log(tempF);

	tempF = parseFloat(temp);
	//console.log(tempF);

	tempF = tempF * 1.8;
	//console.log(tempF);

	tempF = tempF + 32.0;
	//console.log(tempF);

	this.currentTemp = tempF;
};
/* 
SensorController.prototype.sleep = function()
{
	
	this.led.writeSync(0);
};

SensorController.prototype.freeLED = function()
{
	delete to;
	this.led.writeSync(0);
	this.led.unexport();
};

function getSensorId()
{
	var sensorIds = sensor.list();
	console.log("sensor id : " + sensorIds[0]);
	return sensorIds[0];
}


function loadSensorDriver()
{
	var isLoaded = sensor.isDriverLoaded();
	if(!isLoaded)
	{
		try
		{
			sensor.loadDriver();
			console.log("sensor driver is loaded");
			return true;

		}
		catch (err)
		{
			console.log("sensor driver did not load : ", err);
			return false;
		}
	}
	else
	{
		console.log("sensor driver is loaded");
		return true;
	}
	
}
 */


module.exports = SensorController;